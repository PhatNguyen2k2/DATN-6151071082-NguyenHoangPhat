import java.util.Stack;

public class Test2 {
    // static int data[][] = { { 12001, 81001, 81001 },
    // { 8001, 54001, 54001 },
    // { 16001, 108001, 108001 }
    // };
    // static int data[][] = { { 200, 220, 210 },
    // { 180, 230, 190 },
    // { 300, 400, 500 },
    // { 500, 460, 400 } };
    static int data[][] = {
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 },
            { 200, 300, 400, 500, 600, 100 }
    };
    // static int resource[] = { 200, 100, 100 };
    static int resource[] = { 10, 10, 10, 10, 10, 10 };
    // static int resource[] = { 200, 200, 200, 200, 200, 200 };
    // static int resource[] = { 2, 1, 1 };
    // static int resource[] = { 2, 2, 2 };

    static int rows = 20;
    static int cols = 6;

    public static void main(String[] args) {
        // System.out.println();

        long start = System.currentTimeMillis();
        int kq = solution(data, resource, 0);
        long end = System.currentTimeMillis();
        System.out.println((end - start) + "ms");
        System.out.println(kq);

    }

    public static int solution(int[][] data, int[] resource, int row) {
        Stack<int[]> stack = new Stack<>();
        stack.add(new int[] { 0, 0 });
        Stack<int[]> _stackResource = new Stack<>();
        _stackResource.add(resource);
        int _result = 999999999;
        while (!stack.isEmpty()) {
            int[] d = stack.pop();
            int _row = d[0];
            int value = d[1];
            int[] _resource = _stackResource.pop();
            if (_row < rows) {
                for (int i = 0; i < cols; i++) {
                    if (data[_row][i] != -1 && _resource[i] > 0) {
                        int _value = value + data[_row][i];
                        if (_value < _result) {
                            _resource[i] -= 1;
                            stack.add(new int[] { _row + 1, _value });
                            _stackResource.add(_resource);
                            _resource[i] += 1;
                        }
                    }
                }
            } else {
                if (value < _result) {
                    _result = value;
                }
            }
        }
        return _result;
    }

}